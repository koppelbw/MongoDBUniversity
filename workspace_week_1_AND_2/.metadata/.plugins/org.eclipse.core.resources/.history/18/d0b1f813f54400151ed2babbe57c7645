package com.mongodb;

import static com.mongodb.Helpers.printJson;
import static com.mongodb.client.model.Filters.and;
import static com.mongodb.client.model.Filters.eq;
import static com.mongodb.client.model.Filters.gt;
import static com.mongodb.client.model.Filters.lt;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;

import org.bson.Document;
import org.bson.conversions.Bson;

import com.mongodb.MongoClient;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.model.Projections;

public class FindWithProjectionTest {
	public static void main(String[] args) {
       	MongoClient client = new MongoClient();
       	MongoDatabase db = client.getDatabase("course");
       	MongoCollection<Document> collection = db.getCollection("findWithFilterTest");
       	
       	collection.drop();
       	
       	for(int i = 0; i < 10; i++) {
       		collection.insertOne(new Document()
       							.append("x", new Random().nextInt(2))
       							.append("y", new Random().nextInt(100))
       							.append("i", i));
       	}
       	
       	//Bson filter = new Document("x", 0)
       	//				.append("y", new Document("$gt", 10).append("$lt", 90));
       	
       	Bson filter = and(eq("x", 0), gt("y", 10), lt("y", 90));
       	
       	// exclude the X field
       	//Bson projection = new Document("y", 1).append("x", 1).append("_id", 0);
       	//Bson projection = Projections.exclude("x", "_id");
       	Bson projection = Projections.fields(Projections.include("y", "i"), Projections.exclude("_id"));
       	
       	
       	List<Document> all = collection.find(filter)
       			.projection(projection)
       			.into(new ArrayList<Document>());
       	
       	for(Document cur : all) {
       		printJson(cur);
       	}
       	
       
	}
}
